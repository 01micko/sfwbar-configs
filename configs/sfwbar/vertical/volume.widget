module("pulsectl")
module("alsactl")

set XVolumeMutedIcon = If(!Ident($VolumeMutedIcon),
    "audio-volume-muted-symbolic", $VolumeMutedIcon)
set XVolumeLowIcon = If(!Ident($VolumeLowIcon),
    "audio-volume-low-symbolic", $VolumeLowIcon)
set XVolumeMediumIcon = If(!Ident($VolumeMediumIcon),
    "audio-volume-medium-symbolic", $VolumeMediumIcon)
set XVolumeHighIcon = If(!Ident($VolumeHighIcon),
    "audio-volume-high-symbolic", $VolumeHighIcon)
set XVolumeAction = If(!Ident($VolumeAction),"pavucontrol",$VolumeAction)

set XVolumeSinkMenuTmpl = "
Menu('XVolumeSinkMenu') {
  Item('@SINK_DESC@',
      VolumeCtl Extract(WidgetId(),'(.*)_menu'), 'client-set-sink @SINK_NAME@',
      '@SINK_NAME@')
}"

set XVolumeControlTmpl = "
grid 'volume_section_@DEVICE_IFACE@' {
  grid '@DEVICE_ID@' {
    style = 'volume_grid'
    image '@DEVICE_ID@_mute' {
      value = If(Volume('@DEVICE_IFACE@-mute','@DEVICE_ID@'),
            $XVolumeMutedIcon,
            Lookup(Volume('@DEVICE_IFACE@-volume','@DEVICE_ID@'),
              80, $XVolumeHighIcon,
              50, $XVolumeMediumIcon,
              0, $XVolumeLowIcon,
              $XVolumeMutedIcon))
      style = 'volume_mute'
      action = VolumeCtl '@DEVICE_ID@', '@DEVICE_IFACE@-mute toggle'
      trigger = 'volume'
      loc (1,1,1,1)
    }
    image '@DEVICE_ID@_expand' {
      value = 'pan-end'
      style = 'volume_control_expander'
      tooltip = 'expand/collapse channels'
      action = Function 'XVolumeToggleChannels'
      loc(2,1,1,1)
    }
    label '@DEVICE_ID@_name' {
      style = 'volume_device_name'
      value = VolumeInfo('@DEVICE_IFACE@-description','@DEVICE_ID@')
      trigger = 'volume'
      loc (3,1,1,1)
    }
    grid '@DEVICE_ID@_misc' {
      image '@DEVICE_ID@_set_default' {
        value = If(Volume('@DEVICE_IFACE@-is-default','@DEVICE_ID@'),
            'checkbox-checked', 'checkbox')
        style = If('@DEVICE_IFACE@' = 'sink' & Volume('sink-count')>1,
            'volume_default', 'hidden')
        tooltip = 'set as default @DEVICE_IFACE@'
        trigger = 'volume'
        action = VolumeCtl '@DEVICE_IFACE@-set-default @DEVICE_ID@'
        loc(4,1,1,1)
      }
      image '@DEVICE_ID@_menu' {
        value = 'open-menu'
        style = If('@DEVICE_IFACE@' = 'client' & Volume('sink-count')>1,
            'volume_client_menu', 'hidden')
        tooltip = 'route to sink'
        action = Menu 'XVolumeSinkMenu'
        trigger = 'volume'
      }
    }
    scale '@DEVICE_ID@_volume' {
      style = 'volume_scale'
      value = Volume('@DEVICE_IFACE@-volume','@DEVICE_ID@')/100
      action[1] = VolumeCtl '@DEVICE_ID@',
        '@DEVICE_IFACE@-volume ' + Str(GtkEvent('dir') * 100)
      trigger = 'volume'
      loc (1,2,4,1)
    }
    grid '@DEVICE_ID@_channels' {
      style = 'hidden'
      loc(1,3,4,1)
      label '@DEVICE_ID@-@CHANNEL_ID@_label' {
        value = '@CHANNEL_NAME@'
        style = 'volume_channel_name'
        loc(1,@CHANNEL_NUM@,1,1)
      }
      scale '@DEVICE_ID@-@CHANNEL_ID@_scale' {
        style = 'volume_scale'
        value = Volume('@DEVICE_IFACE@-volume','@DEVICE_ID@:@CHANNEL_ID@')/100
        action[1] = VolumeCtl '@DEVICE_ID@:@CHANNEL_ID@',
          '@DEVICE_IFACE@-volume ' + Str(GtkEvent('dir') * 100)
        trigger = 'volume'
        loc(2,@CHANNEL_NUM@,1,1)
      }
    }
  }
}"

Function("XVolumeHideChannels") {
  SetStyle $XVolumeChannels, "hidden"
  SetStyle $XVolumeSingle, "volume_scale"
  SetValue $XVolumeExpander, "pan-end"
}

Function("XVolumeShowChannels") {
  SetStyle $XVolumeChannels, "volume_channel_list"
  SetStyle $XVolumeSingle, "hidden"
  SetValue $XVolumeExpander, "pan-down"
}

Function("XVolumeToggleChannels") {
  Eval "XVolumeChannels", Extract(WidgetId(),"(.*)_expand") + "_channels"
  Eval "XVolumeSingle", Extract(WidgetId(),"(.*)_expand") + "_volume"
  Eval "XVolumeExpander", Extract(WidgetId(),"(.*)_expand") + "_expand"
  [!UserState] Function "XVolumeShowChannels"
  [UserState] Function "XVolumeHideChannels"
  [!UserState] UserState "on"
  [UserState] UserState "off"
}

Function("XVolumeChannelHandler") {
  Config If(VolumeConf("Interface")!="sink" &
      VolumeConf("interface")!="client", "",
      ReplaceAll($XVolumeControlTmpl,
      "@DEVICE_ID@", VolumeConf("device"),
      "@CHANNEL_NAME@", VolumeConf("name"),
      "@CHANNEL_ID@", VolumeConf("id"),
      "@CHANNEL_NUM@", VolumeConf("index"),
      "@DEVICE_IFACE@", VolumeConf("interface")))
  MenuItemClear VolumeConf("device")
  Config If(VolumeConf("interface")!="sink", "",
      ReplaceAll($XVolumeSinkMenuTmpl, "@SINK_NAME@", VolumeConf("device"),
           "@SINK_DESC@", VolumeInfo("sink-description", VolumeConf("device"))))
  VolumeAck "volume-conf"
}

Function("XVolumeChannelRemove") {
  ClearWidget VolumeConf("removed-id")
  MenuItemClear VolumeConf("removed-id")
  VolumeAck "volume-conf-removed"
}

TriggerAction "volume-conf", Function "XVolumeChannelHandler"
TriggerAction "volume-conf-removed", Function "XVolumeChannelRemove"

PopUp "XVolumeWindow" {
  style = "volume_popup"
  label {
    value = "sinks"
    style = If(Volume("sink-count")>0, "volume_separator", "hidden")
    trigger = "volume"
  }
  grid "volume_section_sink" {
    style = "volume_section"
  }
  label {
    value = "clients"
    style = If(Volume("client-count")>0, "volume_separator", "hidden")
    trigger = "volume"
  }
  grid "volume_section_client" {
    style = "volume_section"
  }
}

layout {
  style = "module"
  image {
    value = If(Volume("sink-mute"),$XVolumeMutedIcon,
              Lookup(Volume("sink-volume"),
                80, $XVolumeHighIcon,
                50, $XVolumeMediumIcon,
                0, $XVolumeLowIcon,
                $XVolumeMutedIcon))
    trigger = "volume"
    tooltip = "Volume: " + Str(Volume("sink-volume"),0) + "%" +
      If(Volume("sink-mute")," (muted)","") +
      "\nForm: " + VolumeInfo("sink-form") +
      "\nPort: " + VolumeInfo("sink-port") +
      "\nMonitor: " + VolumeInfo("sink-monitor")
    style = If(Ident(volume),"module","hidden")
    action[RightClick] = VolumeCtl "sink-mute toggle"
    action[MiddleClick] = Exec $XPulseAction
    action[LeftClick] = PopUp "XVolumeWindow"
    action[ScrollUp] = VolumeCtl "sink-volume +1"
    action[ScrollDown] = VolumeCtl "sink-volume -1"
    css = "* {  -ScaleImage-color: @theme_fg_color; min-height: 18px; min-width: 18px; padding: 2px; }"
  }
}

#CSS

window#XVolumeWindow {
  background: rgba(0,0,0,0);
}

grid#volume_popup {
  border-radius: 10px;
  border: 1px solid @borders;
  margin: 5px;
  padding: 10px;
  background-color: alpha(@theme_bg_color, 0.75);
  -GtkWidget-hexpand: true;
  -GtkWidget-vexpand: false;
  -GtkWidget-direction: bottom;
}

image#volume_control_expander,
image#volume_default,
image#volume_client_menu,
image#volume_mute {
  color: @theme_fg_color;
  padding: 3px;
  min-width: 16px;
  min-height: 16px;
  -GtkWidget-hexpand: false;
  -GtkWidget-halign: start;
}

#volume_scale {
  margin: 5px;
  -GtkWidget-direction: right;
  -GtkWidget-valign: center;
  -GtkWidget-hexpand: true;
}

#volume_scale progress,
#volume_scale trough {
  min-height: 10px;
}

image#XPulseVolumeButton {
  background-color: rgba(100, 100, 256, 0.3);
  color: @theme_fg_color;
  border-radius: 10px;
  min-width: 20px;
  min-height: 20px;
  -GtkWidget-valign: center;
  -GtkWidget-halign: center;
}

label#volume_separator {
  padding-top: 3px;
  font-size: 10px;
  -GtkWidget-align: 0.0;
  -GtkWidget-hexpand: true;
  border-bottom: dashed 1px @border;
  min-height: 20px;
}

grid#volume_section {
  -GtkWidget-hexpand: true;
  -GtkWidget-direction: bottom;
}
#volume_device_name {
  -GtkWidget-hexpand: true;
  -GtkWidget-align: 0;
  -GtkWidget-halign: start;
}

#volume_control_expander {
  -GtkWidget-halign: start;
}

#volume_channel_list {
  -GtkWidget-direction: bottom;
}

#volume_grid {
  -GtkWidget-hexpand: true;
}

#volume_channel_name {
  -GtkWidget-halign: start;
}
